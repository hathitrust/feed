---

x-condition-healthy: &healthy
  condition: service_healthy

x-healthcheck-defaults: &healthcheck-defaults
  interval: 5s
  timeout: 10s
  start_period: 10s
  retries: 5

services:

  test:
    build: .
    volumes:
      - .:/usr/local/feed
      - ./clamav:/var/lib/clamav
    environment:
      - HTFEED_CONFIG=/usr/local/feed/etc/config_test.yml
      - FEED_HOME=/usr/local/feed
      - VERSION=feed-development
      - PUSHGATEWAY=http://pushgateway:9091
      - TEST=1
    command: prove
    depends_on:
      mariadb: *healthy
      minio: *healthy
      pushgateway: *healthy
      rabbitmq: *healthy

  # Note: for permissions purposes this does NOT bind in the local development
  # environment, so local changes after running docker compose build will NOT
  # be reflected.
  test-and-cover:
    build: .
    volumes:
      - ./clamav:/var/lib/clamav
    environment:
      - HTFEED_CONFIG=/usr/local/feed/etc/config_test.yml
      - FEED_HOME=/usr/local/feed
      - VERSION=feed-development
      - PUSHGATEWAY=http://pushgateway:9091
      - TEST=1
      # pass through info needed by coveralls uploader
      - GITHUB_TOKEN
      - GITHUB_RUN_ID
      - GITHUB_EVENT_TOKEN
      - GITHUB_EVENT_PATH
      - GITHUB_SHA
      - GITHUB_REF
      - GITHUB_ACTIONS
    command: cover -test -report Coveralls -make 'prove; exit $?'
    depends_on:
      mariadb: *healthy
      minio: *healthy
      pushgateway: *healthy
      rabbitmq: *healthy

  ingest:
    build: .
    volumes:
      - .:/usr/local/feed
      - ./ingest_sips:/tmp/sips
      - ./ingest_stage:/tmp/stage
      - ~/.config/rclone/rclone.conf:/usr/local/feed/etc/rclone.conf
      - ./clamav:/var/lib/clamav
      # FIXME -- before these will work, run: docker compose run --rm ingest chown ingest.ingest /sdr1 /sdr2 /htdataden
      - repository_link:/sdr1
      - repository_obj:/sdr2
      - backups:/htdataden
    command:
      - /usr/bin/perl
      - /usr/local/feed/bin/feedd.pl
    environment:
      - HTFEED_CONFIG=/usr/local/feed/etc/config_ingest_docker.yml
      - FEED_HOME=/usr/local/feed
      - VERSION=feed-development
      - HTFEED_JOBMETRICS_DATA_DIR=/usr/local/feed/jobmetrics
    depends_on:
      mariadb: *healthy

  validate:
    build: .
    volumes:
      - .:/usr/local/feed
      - ./volumes_to_test:/tmp/stage/toingest/test
    environment:
      - HTFEED_CONFIG=/usr/local/feed/etc/config_prevalidate.yml
      - HTFEED_JOBMETRICS_DATA_DIR=/usr/local/feed/jobmetrics
      - FEED_HOME=/usr/local/feed
      - VERSION=feed-development
    command: bash -c "/bin/ls /tmp/stage/toingest/test/*.zip | xargs -n 1 basename | sed s/.zip// | perl -w /usr/local/feed/bin/validate_volume.pl -p simple -n test --no-clean"
    depends_on:
      mariadb: *healthy

  prometheus-exporter:
    build: .
    volumes:
      - .:/usr/local/feed
    ports:
      - "9090:9090"
    environment:
      - HTFEED_CONFIG=/usr/local/feed/etc/config_prevalidate.yml
      - HTFEED_JOBMETRICS_DATA_DIR=/usr/local/feed/jobmetrics
      - FEED_HOME=/usr/local/feed
      - VERSION=feed-development
    command: plackup -p 9090 ./bin/metrics_exporter.pl


  mariadb:
    image: ghcr.io/hathitrust/db-image:latest
    volumes:
      - ./etc/ingest.sql:/docker-entrypoint-initdb.d/999-ingest.sql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysqlroot
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized"]

  # S3 compatible object storage
  minio:
    image: minio/minio
    restart: always
    environment:
      MINIO_ACCESS_KEY: TESTINGACCESSKEY
      MINIO_SECRET_KEY: testingsecretkey
    command: server /data
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "/usr/bin/curl", "-s", "-f", "http://localhost:9000/minio/health/live"]

  pushgateway:
    image: prom/pushgateway
    command:
      - --web.enable-admin-api
    ports:
      - "9091:9091"
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "wget", "--quiet", "--tries=1", "-O", "/dev/null", "pushgateway:9091/-/healthy" ]


  rabbitmq:
    image: rabbitmq
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "rabbitmqctl", "status"]

volumes:
  repository_link:
  repository_obj:
  backups:
  rclone:
