version: '3'

services:

  test:
    build: .
    volumes:
      - .:/usr/local/feed
    environment:
      - HTFEED_CONFIG=/usr/local/feed/etc/config_test.yml
      - FEED_HOME=/usr/local/feed
      - TEST=1
      - CLAMAV_HOST=clamav
      - CLAMAV_PORT=3310
      - VERSION=feed-development
    command: bin/wait-for --timeout=300 mariadb:3306 clamav:3310 -- prove -I lib
    depends_on:
      - mariadb
      - clamav
      - minio


  ingest:
    build: .
    volumes:
      - .:/usr/local/feed
      - ./ingest_sips:/tmp/sips
      - ./ingest_stage:/tmp/stage
      # FIXME -- before these will work, run: docker-compose run --rm ingest chown ingest.ingest /sdr1 /sdr2 /htdataden
      - repository_link:/sdr1
      - repository_obj:/sdr2
      - backups:/htdataden
    environment:
      - HTFEED_CONFIG=/usr/local/feed/etc/config_ingest_docker.yml
      - FEED_HOME=/usr/local/feed
      - CLAMAV_HOST=clamav
      - CLAMAV_PORT=3310
      - VERSION=feed-development
    depends_on:
      - mariadb
      - clamav

  validate:
    build: .
    volumes:
      - .:/usr/local/feed
      - ./volumes_to_test:/tmp/stage/toingest/test
    environment:
      - HTFEED_CONFIG=/usr/local/feed/etc/config_prevalidate.yml
      - FEED_HOME=/usr/local/feed
      - CLAMAV_HOST=clamav
      - CLAMAV_PORT=3310
      - VERSION=feed-development
    command: bash -c "/bin/ls /tmp/stage/toingest/test/*.zip | xargs -n 1 basename | sed s/.zip// | perl -w /usr/local/feed/bin/validate_volume.pl -p simple -n test --no-clean"
    depends_on:
      - mariadb
      - clamav

  mariadb:
    build: docker/database
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysqlroot

  # S3 compatible object storage
  minio:
    image: minio/minio
    restart: always
    environment:
      MINIO_ACCESS_KEY: TESTINGACCESSKEY
      MINIO_SECRET_KEY: testingsecretkey
    command: server /data

  clamav:
    image: clamav/clamav:stable
    tty: true
    restart: unless-stopped
    volumes:
      - ./ingest_sips:/tmp/sips
      - ./ingest_stage:/tmp/stage

volumes:
  repository_link:
  repository_obj:
  backups:
