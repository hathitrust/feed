version: '3'

services:

  test:
    build: .
    volumes:
      - .:/usr/local/feed
      - ./clamav:/var/lib/clamav
    environment:
      - HTFEED_CONFIG=/usr/local/feed/etc/config_test.yml
      - FEED_HOME=/usr/local/feed
      - TEST=1
      - VERSION=feed-development
    command: bin/wait-for --timeout=300 mariadb:3306 minio:9000 pushgateway:9091 rabbitmq:5672 -- prove
    depends_on:
      - mariadb
      - minio
      - pushgateway
      - rabbitmq

  ingest:
    build: .
    volumes:
      - .:/usr/local/feed
      - ./ingest_sips:/tmp/sips
      - ./ingest_stage:/tmp/stage
      - ~/.config/rclone/rclone.conf:/usr/local/feed/etc/rclone.conf
      - ./clamav:/var/lib/clamav
      # FIXME -- before these will work, run: docker-compose run --rm ingest chown ingest.ingest /sdr1 /sdr2 /htdataden
      - repository_link:/sdr1
      - repository_obj:/sdr2
      - backups:/htdataden
    command:
      - /usr/bin/perl
      - /usr/local/feed/bin/feedd.pl
    environment:
      - HTFEED_CONFIG=/usr/local/feed/etc/config_ingest_docker.yml
      - FEED_HOME=/usr/local/feed
      - VERSION=feed-development
    depends_on:
      - mariadb

  validate:
    build: .
    volumes:
      - .:/usr/local/feed
      - ./volumes_to_test:/tmp/stage/toingest/test
    environment:
      - HTFEED_CONFIG=/usr/local/feed/etc/config_prevalidate.yml
      - FEED_HOME=/usr/local/feed
      - VERSION=feed-development
    command: bash -c "/bin/ls /tmp/stage/toingest/test/*.zip | xargs -n 1 basename | sed s/.zip// | perl -w /usr/local/feed/bin/validate_volume.pl -p simple -n test --no-clean"
    depends_on:
      - mariadb

  mariadb:
    image: ghcr.io/hathitrust/db-image:latest
    volumes:
      - ./etc/ingest.sql:/docker-entrypoint-initdb.d/999-ingest.sql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysqlroot

  # S3 compatible object storage
  minio:
    image: minio/minio
    restart: always
    environment:
      MINIO_ACCESS_KEY: TESTINGACCESSKEY
      MINIO_SECRET_KEY: testingsecretkey
    command: server /data

  pushgateway:
    image: prom/pushgateway
    command:
      - --web.enable-admin-api
    ports:
      - "9091:9091"

  rabbitmq:
    image: rabbitmq

volumes:
  repository_link:
  repository_obj:
  backups:
  rclone:
